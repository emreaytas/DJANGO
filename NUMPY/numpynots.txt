####################################################################################################################################################################################################################################################################################################################################

//NUMPY nedir...///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

veri analazii için çok gerekli bir kütüphanedir...
pip install numpy diyerek pythonun lib kısmına yükleriz... pip list ile kontrol edebiliriz. yüklenmiş mi yüklenmemiş mi diye...

normalde listelerin yapamadığnı numpy ile yapabilriz. hızlı çalışır ve büyük veriler ile çallışırken çok işimize yarar hızlı ve etkili çalışır...

import numpy diyerek çağırırız... import numpy as np diyerek np ismi ile kullanabiliriz...
numpyde'bize dizi mantığı ile hareket edeceğiz...


numpy.metot() diyerek kullanabiliriz...

np_array = np.array([1,2,3,4,5,6,7,8,9]) # bir liste içerisinde yolladık yoksa her bir elemanı farklı bir liste olarak kabul eder bu yüzden liste içerisinde yolladık mnpy bunları bir array içerisine atayacak...
print(type(np_array)) # <class 'numpy.ndarray'> olarak görürüz...


.........................................................

import numpy as np

#pyton list
py_list = [1,2,3,4,5,6,7,8,9]

np_array = np.array([1,2,3,4,5,6,7,8,9])

print(type(py_list)) # list verir...
print(type(np_array)) # numpy ndarray verir...

py_multi = [[1,2,3],[1,2,3],[1,2,3]] # liste ve her elemanı bir liste bu yüzden bir çok boyut oluşturabildik...

np_multi = np_array.reshape(3,3) # 3 satir 3 sutun çok boyutlu dizi yapabiliriz...

print(np_array.ndim) # 1 boyutlu diye 1 verir...
print(np_multi.ndim) # 2 boyutlu diye 2 verir...

print(np_array.shape) # (9,) verir...
print(np_multi.shape) # (3,3) verirr

.........................................................

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Numpy dizileri ile çalışma...///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import numpy as np

result = np.array([1,3,5,7,9])
result1 = np.arange(1,10) # 1 10 arası 10 dahil değil... 1 2 3 4 5 6 7 8 9 elemanarındanoluşan bir dizi olur..
result2 = np.arange(10,100,3) #3er 3er artacak ve bir dizi oluşacak... 100 dahil değil range gibii...
result3 = np.zeros(10) # 10 elemanıda 0 olan bir dizi olur...
result4 = np.ones(10) # 10 elemanıda 1 olan bir dizi olur...
result5 = np.linspace(0,100,5) # başlangıç ve bitiş noktasını eşit aralıklar ile böler... 0 25 50 75 100 gibi 5 tane parça oluşur bu aralıkta başlangıç ve bitiş dahildir...
result6 = np.linspace(0,5,5) #0 1.25 25 3.75 5 olarak 5 parça elde ederiz...
result7 = np.random.randint(0,10) # 10 dahil ddeğil max 9 olacak şekilde. eğer randint(20) dersek min değeri 0 olarak kabul eder... sadece bir değer gelir...
result8 = np.random.randint(1,10,3) # min 1 max 9 3 tane değer gelecek...
result9 = np.random.randn(5) # eksi değerlerde katılır...
result10 = np.arange(50) # 0 1 2 .... 49.  50 elemanlı bir dizi..
result10 = result10.reshape(5,10) # bununla resul10 çift katlı bir array oldu... elemanlarını ise sırası ile 10 10 olarak böldü...
print(result10.sum(axis=1)) # axis = 1 olursa satırların toplamını sıfır olursa sutunların toplamini verir...

result11 = np.random.randint(1,100,10)
print(result11.max()) # en buyuk degeri buluruz... min ile ise en kcuuk degeri buluruz... 
print(result11.mean()) # ortalamayı verir...
print(result11.argmax()) # üretilen en buyuk sayının indexini verir... argmin() ile ise en kucuk sayinin indexini verir...

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



####################################################################################################################################################################################################################################################################################################################################